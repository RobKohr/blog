
        <html>
            <head>
                <title>angular - RobKohr's Blog</title>

<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-600316-3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag() {
    dataLayer.push(arguments);
  }
  gtag("js", new Date());

  gtag("config", "UA-600316-3");
</script>

<link rel="alternate" type="application/rss+xml" title="RobKohr's Blog" href="rss.xml" />
<link rel="shortcut icon" type="image/ico" href="favicon.ico">
<link rel="stylesheet" href="libs/highlight/styles/dark.min.css">
<script src="libs/highlight/highlight.min.js"></script>

                <link rel="stylesheet" href="../neat.css">
                <base href="../">
            </head>
            <body>
            <a href="./index.html">Home</a>
            <h2>Tag: angular</h2>
    
    <h2><a href="articles/angular-multi-level-componets">Angular multi-level componets</a></h2>
    <div class="variables">
    <div class="date">@date=2023-07-24</div>
    <div class="tags">@tags=<a href="tags/coding">coding</a>, <a href="tags/angular">angular</a>, <a href="tags/wfs">wfs</a></div>
    </div>
    <article>
        


For WFS I am working on the services page and the services need to be sortable in the settings, and then show the forms in the sorted order when making a new service request. Right now the order is hard coded, and each component has its own property set. I am going to create a wrapper for the com <a class="nowrap" href="articles/angular-multi-level-componets">... read more (89 words)...</a> 
    </article>
    
    <h2><a href="articles/angular-is-just-easier-to-make-most-web-applications-in-than-react">Angular is just easier to make most web applications in than React</a></h2>
    <div class="variables">
    <div class="date">@date=2019-11-25</div>
    <div class="tags">@tags=<a href="tags/angular">angular</a>, <a href="tags/react">react</a></div>
    </div>
    <article>
        


UPDATE: My feelings about this have changed quite a bit, a follow up article is to come. The summary is that React has gotten so much easier with React hooks that my recommendations here have changed.

### A little background

I did about 5 years of AngularJS (not newer Angular) development, 1.5  <a class="nowrap" href="articles/angular-is-just-easier-to-make-most-web-applications-in-than-react">... read more (493 words)...</a> 
    </article>
    
    <h2><a href="articles/godot-asset-store">Godot Asset Store</a></h2>
    <div class="variables">
    <div class="date">@date=2019-11-19</div>
    <div class="tags">@tags=<a href="tags/godot">godot</a>, <a href="tags/godot-asset-store">godot-asset-store</a>, <a href="tags/projects">projects</a>, <a href="tags/in-progress">in-progress</a>, <a href="tags/angular">angular</a>, <a href="tags/nodejs">nodejs</a></div>
    </div>
    <article>
        


I started developing the [Godot Asset Store](https://godotassetstore.org) a few weeks ago. It is built with Angular and node.js as the backend api with nginx as the frontend.

I am getting to the tricky parts now:

- Auth
- Fetching content from github
- payments
- splitting out payments
- accoun <a class="nowrap" href="articles/godot-asset-store">... read more (45 words)...</a> 
    </article>
    
            </body>
        </html>
    